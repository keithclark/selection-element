/*! selectionelement v1.0.0 - Keith Clark - MIT license */
class e extends HTMLElement{#e;#t;#n=!1;constructor(){super();var e;this.attachShadow({mode:"open"}).innerHTML=`<style>${e=this.constructor.selectedAttributeName,`\n::slotted([${e}]){\n  outline: 3px solid #ccc;\n}\n:host(:not([hidden])) {\n  display: inline-flex;\n  gap:3px\n}\n:host{\n  border: 1px solid gray;\n  border-radius: 3px;\n  padding: 3px\n}\n:host(:focus-within) ::slotted([${e}]) {\n  outline-color: #0063e1;\n}\n`}</style><slot/>`,this.#e=this.#i.bind(this),this.#t=this.#s.bind(this),this.tabIndex="0",console.log(this.constructor.selectedAttributeName)}get length(){return this.children.length}get selectedChildren(){return[...this.children].filter((e=>this.#l(e)))}get selectedIndex(){const{children:e}=this;for(let t=0;t<e.length;t++)if(this.#l(e[t]))return t;return-1}set selectedIndex(e){const{children:t}=this;this.#o(),e>=0&&e<t.length&&this.#r(t[e])}get selectedChild(){const{selectedIndex:e}=this;return e>-1?this.children[e]:null}set selectedChild(e){const{children:t}=this;this.#o();for(let n=0;n<t.length;n++)if(t[n]===e){this.#r(e);break}}static get selectedAttributeName(){return"data-selected"}static get observedAttributes(){return["multiple"]}connectedCallback(){this.addEventListener("focusin",this.#e),this.addEventListener("pointerdown",this.#t)}disconnectedCallback(){this.removeEventListener("focusin",this.#e),this.removeEventListener("pointerdown",this.#t)}attributeChangedCallback(e,t,n){if("multiple"===e){if(null===n){const{selectedIndex:e}=this;e>-1&&(this.#o(),this.#r(this.children[e]))}this.#n=null!==n}}#c(e){e.removeAttribute(this.constructor.selectedAttributeName)}#r(e){e.setAttribute(this.constructor.selectedAttributeName,"")}#o(){this.selectedChildren.forEach((e=>this.#c(e)))}#l(e){return e.hasAttribute(this.constructor.selectedAttributeName)}#d(){this.selectedChild&&this.selectedChild.scrollIntoView({behavior:"smooth",block:"nearest",inline:"nearest"})}#h(){this.dispatchEvent(new Event("change",{bubbles:!0})),this.dispatchEvent(new Event("input",{bubbles:!0}))}#i(){this.addEventListener("focusout",(t=>{document.removeEventListener("keydown",e)}),{once:!0});const e=e=>{const{key:t}=e;"ArrowRight"===t||"ArrowDown"===t?this.selectedIndex<this.length-1&&(this.selectedIndex++,this.#d(),this.#h(),e.preventDefault()):"ArrowLeft"!==t&&"ArrowUp"!==t||this.selectedIndex>0&&(this.selectedIndex--,this.#d(),this.#h(),e.preventDefault())};document.addEventListener("keydown",e)}#s(e){let{target:t,shiftKey:n}=e;if(t.parentElement!==this&&(t=t.parentElement),e.defaultPrevented)return!1;if(this.#n&&n)this.#l(t)?(this.#c(t),this.#h()):(this.#r(t),this.#h());else{if(this.#l(t))return!1;this.#o(),this.#r(t),this.#h()}}}export{e as default};
